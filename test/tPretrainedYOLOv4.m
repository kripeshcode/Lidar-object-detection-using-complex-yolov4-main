classdef(SharedTestFixtures = {DownloadComplexYolov4Fixture}) tPretrainedYOLOv4 < matlab.unittest.TestCase
    % Test for PretrainedComplexYOLOv4
    
    % Copyright 2021 The MathWorks, Inc.
    
    % The shared test fixture downloads the model. Here we check the
    % detections of each models.
    properties        
        RepoRoot = getRepoRoot;
    end
    
    properties(TestParameter)
        Model = iGetDifferentModels();
    end

    methods(Test)
        function exerciseDetection(test,Model)            
            detector = load(fullfile(test.RepoRoot,'models','complex-yolov4-models-master','models',Model.dataFileName));
            modelName = strsplit(Model.dataFileName,'/');

            ptCld = pcread(fullfile(test.RepoRoot,'..','pointclouds','0001.pcd'));
            gridParams = helper.getGridParameters;
            classNames = helper.getClassNames;
            [img,~] = helper.preprocess(ptCld, gridParams);
            anchors = helper.getAnchors(modelName{1});
            [bboxes, scores, labels] = detectComplexYOLOv4(detector.net, img, anchors, classNames, 'auto');

            test.verifyEqual(bboxes, Model.expectedBboxes,'AbsTol',single(1e-2));
            test.verifyEqual(scores, Model.expectedScores,'AbsTol',single(1e-2));
            test.verifyEqual(labels, Model.expectedLabels);            
        end       
    end
end

function Model = iGetDifferentModels()
% Load YOLOv4-Pandaset
dataFileName = 'complex-yolov4-pandaset/complex-yolov4-pandaset.mat';

% Expected detection results.
expectedBboxes = single([62.9979  562.6405    8.4515   10.0657  168.9640;...
  321.4069  562.5641    8.2753   11.2603  123.9085;...
  106.1246  353.8116   56.1350   22.1984   -3.0292;...
  280.9620  253.8887   54.5222   22.7809   -2.8766;...
  309.0541  153.2278   53.7926   22.8003  175.2755;...
  425.4077  339.4636   53.9085   23.5097    2.8756;...
  144.8896  117.9126   72.5260   32.5886 -176.6801;...
  157.9700  196.1560   60.2388   26.2909  176.4073]);
expectedScores = single([0.2301;0.1563;0.8486;0.9919;1.0000;0.8907;0.5088;0.9871]);
expectedLabels = categorical({'Pedestrain';'Pedestrain';'Car';'Car';'Car';'Car';'Truck';'Car'});
detectorYOLOv4Pandaset = struct('dataFileName',dataFileName,...
    'expectedBboxes',expectedBboxes,'expectedScores',expectedScores,...
    'expectedLabels',expectedLabels);

% Load tiny-yolov4-pandaset
dataFileName = 'tiny-complex-yolov4-pandaset/tiny-complex-yolov4-pandaset.mat';

% Expected detection results.
expectedBboxes = single([101.5230  353.9243   51.5760   22.7369   -2.4730;...
  154.0279  117.7253   68.4812   26.6877  177.9337;...
  157.0230  195.9053   59.6339   23.1816 -178.8141;...
  174.7080  152.9906   65.6461   26.1998  174.4401;...
  210.7210  462.1014   49.4194   22.4370  -23.0138;...
  195.0767  561.0181   59.5237   25.0804 -163.0908;...
  283.1094  254.6001   56.8760   23.1281   -0.2960;...
  312.2672  152.6835   57.9609   22.5368  178.7967;...
  316.1564  486.0815   59.9362   25.2384  -91.3584;...
  347.8901  398.4372   58.1425   23.9504  -35.8817;...
  413.8113  300.3788   59.3578   25.0234   -0.5064;...
  400.1172  411.2654   67.0539   25.7621 -179.9310;...
  400.5548  461.0544   66.7300   27.3921 -106.2011;...
  387.3457  523.3322   63.0952   24.9289 -121.0169;...
  420.1742  338.2006   51.8193   23.7939    4.2179]);
expectedScores = single([1.0000;0.8652;1.0000;0.5205;0.5793;0.9999;0.9960;...
                        0.9973;0.1788;0.9606;0.9998;0.1885;0.9848;0.9833;0.1407]);
expectedLabels = categorical({'Car';'Truck';'Car';'Car';'Car';'Car';'Car';...
                              'Car';'Car';'Car';'Car';'Car';'Car';'Car';'Car'});
detectorTinyYOLOv4Pandaset = struct('dataFileName',dataFileName,...
    'expectedBboxes',expectedBboxes,'expectedScores',expectedScores,...
    'expectedLabels',expectedLabels);

 Model = struct(...
    'detectorYOLOv4Pandaset',detectorYOLOv4Pandaset,'detectorTinyYOLOv4Pandaset',detectorTinyYOLOv4Pandaset);  
end